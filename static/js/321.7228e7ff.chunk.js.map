{"version":3,"file":"static/js/321.7228e7ff.chunk.js","mappings":"+NAaIA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGF,aAGjB,SAASG,EAAT,GAAsD,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cACjD,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAkBA,OACE,SAAC,KAAD,CACEC,SAlBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BH,GAAgB,IAEhBI,EAAAA,EAAAA,IAAMF,GACHG,MAAK,SAAAC,GACJH,IACAP,EAASU,EAAKC,OACdZ,EAAQW,EAAKE,KAAKC,MAClBZ,GAAc,EACf,IACAa,OAAM,SAAAC,GAAW,IACjBC,SAAQ,WACPZ,GAAgB,EACjB,GACJ,EAKGa,cAAe,CACbvB,MAAO,GACPE,SAAU,IAEZsB,iBAAkB3B,EANpB,UAQE,UAAC,KAAD,YACE,UAAC,KAAD,CAAO4B,QAAQ,QAAf,WACE,qCACA,SAAC,KAAD,CAAaN,KAAK,QAAQO,KAAK,OAAOC,YAAY,OAClD,SAAC,KAAD,CAAgBC,UAAU,MAAMT,KAAK,cAGvC,UAAC,KAAD,CAAOM,QAAQ,WAAf,WACE,yCACA,SAAC,KAAD,CACEN,KAAK,WACLO,KAAK,WACLC,YAAY,IACZE,aAAa,SAEf,SAAC,KAAD,CAAgBD,UAAU,MAAMT,KAAK,iBAGvC,SAAC,KAAD,CAAQO,KAAK,SAASI,SAAUrB,EAAhC,SACGA,EAAe,iBAAmB,WAGrC,SAAC,KAAD,CAAUsB,GAAG,UAAb,8BAIP,C,yWCpEYC,GAAUC,EAAAA,EAAAA,GAAO,MAAPA,CAAH,0QAcPC,EAASD,EAAAA,EAAAA,IAAH,iHAQNE,EAAUF,EAAAA,EAAAA,IAAH,uKAIR,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,IAApB,IACM,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,MAAlB,IACJ,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,GAApB,IAIJC,EAAUX,EAAAA,EAAAA,IAAH,mGAMPY,GAAWZ,EAAAA,EAAAA,GAAOa,EAAAA,GAAPb,CAAH,sTAMF,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,IAApB,IAKI,SAAAH,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,OAAnB,IAID,SAAAZ,GAAC,OAAIA,EAAEC,MAAMU,OAAOE,MAAnB,IAIZC,GAAajB,EAAAA,EAAAA,GAAOkB,EAAAA,GAAPlB,CAAH,0LAWVmB,GAAWnB,EAAAA,EAAAA,GAAOa,EAAAA,GAAPb,CAAH,oNAGV,SAAAG,GAAC,OAAIA,EAAEC,MAAMU,OAAOE,MAAnB,IAKC,SAAAb,GAAC,OAAIA,EAAEC,MAAMU,OAAOM,QAAnB,IAID,SAAAjB,GAAC,OAAIA,EAAEC,MAAMU,OAAOM,QAAnB,IAIDC,GAAcrB,EAAAA,EAAAA,GAAOsB,EAAAA,GAAPtB,CAAH,4FAQXuB,EAAQvB,EAAAA,EAAAA,MAAH,yHAOLwB,GAAiBxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAH,yKAOhB,SAAAG,GAAC,OAAIA,EAAEC,MAAMU,OAAOM,QAAnB,IAGCM,EAAS1B,EAAAA,EAAAA,OAAH,uWAcK,SAAAG,GAAC,OAAKA,EAAEN,SAAW,WAAY,MAA9B,G","sources":["components/Login/Login.js","components/Login/Login.styled.jsx"],"sourcesContent":["import {\n  StyledForm,\n  StyledField,\n  Label,\n  StyledErrorMsg,\n  Button,\n  TextLink,\n} from './Login.styled';\nimport { Formik } from 'formik';\nimport { login } from 'utils/operations';\nimport * as yup from 'yup';\nimport { useState } from 'react';\n\nlet schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(6).required(),\n});\n\nexport default function Login({ setUser, setToken, setIsLoggedIn }) {\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    setIsProcessing(true);\n\n    login(values)\n      .then(data => {\n        resetForm();\n        setToken(data.token);\n        setUser(data.user.name);\n        setIsLoggedIn(true);\n      })\n      .catch(error => {})\n      .finally(() => {\n        setIsProcessing(false);\n      });\n  };\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        <Label htmlFor=\"email\">\n          <span>email</span>\n          <StyledField name=\"email\" type=\"text\" placeholder=\" \"></StyledField>\n          <StyledErrorMsg component=\"div\" name=\"email\" />\n        </Label>\n\n        <Label htmlFor=\"password\">\n          <span>password </span>\n          <StyledField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n          ></StyledField>\n          <StyledErrorMsg component=\"div\" name=\"password\" />\n        </Label>\n\n        <Button type=\"submit\" disabled={isProcessing}>\n          {isProcessing ? 'Please wait...' : 'Login'}\n        </Button>\n\n        <TextLink to=\"/verify\">Verify email</TextLink>\n      </StyledForm>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeBox = styled('div')`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  height: 300px;\n\n  @media screen and (min-width: 768px) {\n    width: 720px;\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const ImgBox = styled.div`\n  width: 300px;\n\n  @media screen and (max-width: 767.98px) {\n    display: none;\n  }\n`;\n\nexport const FormBox = styled.div`\n  width: 360px;\n  height: 300px;\n  background-color: white;\n  border: ${p => p.theme.borders.dark};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.box};\n  overflow: hidden;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  text-align: center;\n`;\n\nexport const MenuLink = styled(NavLink)`\n  width: 50%;\n  padding: 16px 0;\n  font-size: 16px;\n  font-weight: 700;\n  color: #212121;\n  border-bottom: ${p => p.theme.borders.dark};\n  text-decoration: none;\n  transition: background-color 250ms linear;\n\n  &.active {\n    background-color: ${p => p.theme.colors.bcgLink};\n  }\n\n  :hover {\n    background-color: ${p => p.theme.colors.bcgSec};\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  padding: 16px 24px;\n  /* height: 100%; */\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  flex-grow: 2;\n\n  height: 248px;\n`;\n\nexport const TextLink = styled(NavLink)`\n  text-align: right;\n  width: 100%;\n  color: ${p => p.theme.colors.bcgSec};\n  text-decoration: none;\n  transition: color 250ms linear;\n\n  &.active {\n    color: ${p => p.theme.colors.textPrim};\n  }\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px 8px;\n\n  :focus-visible {\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  font-weight: 600;\n`;\n\nexport const StyledErrorMsg = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  transform: translatey(100%);\n  font-size: 10px;\n  background-color: white;\n  color: ${p => p.theme.colors.textPrim};\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 100%;\n  padding: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  margin: 0 auto;\n  background-color: darkgrey;\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${p => (p.disabled ? 'darkgrey': 'grey')};\n  }\n\n  :focus-visible {\n    outline: none;\n  }\n`;\n"],"names":["schema","yup","shape","email","required","password","min","Login","setUser","setToken","setIsLoggedIn","useState","isProcessing","setIsProcessing","onSubmit","values","resetForm","login","then","data","token","user","name","catch","error","finally","initialValues","validationSchema","htmlFor","type","placeholder","component","autoComplete","disabled","to","HomeBox","styled","ImgBox","FormBox","p","theme","borders","dark","radii","normal","shadows","box","LinkBox","MenuLink","NavLink","colors","bcgLink","bcgSec","StyledForm","Form","TextLink","textPrim","StyledField","Field","Label","StyledErrorMsg","ErrorMessage","Button"],"sourceRoot":""}