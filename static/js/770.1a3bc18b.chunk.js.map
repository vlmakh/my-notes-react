{"version":3,"file":"static/js/770.1a3bc18b.chunk.js","mappings":"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","sources":["components/Footer/Footer.jsx","components/TodoItem/TodoItem.styled.jsx","components/TodoEditModal/TodoEditModal.styled.jsx","components/TodoEditModal/TodoEditModal.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.styled.jsx","components/TodoList/TodoList.js","components/TodoAddNew/TodoAddNew.styled.jsx","components/TodoAddNew/TodoAddNew.js","utils/animate.js","components/NoteItem/NoteItem.styled.jsx","components/NoteEditModal/NoteEditModal.styled.jsx","components/NoteEditModal/NoteEditModal.js","utils/context.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/Confirm/Confirm.styled.jsx","components/Confirm/Confirm.js","components/NoteItem/NoteItem.js","components/BtnsBlock/BtnsBlock.styled.jsx","utils/getRandomHexColor.js","components/BtnsBlock/BtnsBlock.js","utils/reducer.js","components/SortMenu/SortMenu.styled.jsx","components/SortMenu/SortMenu.js","pages/NotesPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Footer = styled.div`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  \n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 40px;\n  background: grey;\n  color: #ffffff;\n  z-index: 1000;\n`;\n\n","import styled from '@emotion/styled';\nimport { Reorder } from 'framer-motion';\n\nexport const ReorderItemStyled = styled(Reorder.Item)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.bcgPrim};\n  }\n\n  :not(:last-child) {\n    border-bottom: ${p => p.theme.borders.light};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nexport const Checkbox = styled.input`\n  display: none;\n\n  :checked + button {\n    color: ${p => p.theme.colors.textSec};\n  }\n  :checked ~ span {\n    text-decoration: line-through grey 2px;\n    color: ${p => p.theme.colors.textSec};\n  }\n`;\n\nexport const CheckBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: green;\n`;\n\nexport const TodoText = styled.span`\n  max-width: 220px;\n  margin-left: 8px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: 600;\n  color: ${p => p.theme.colors.textPrim};\n  word-wrap: break-word;\n`;\n\nexport const EditBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover.active {\n    color: ${p => p.theme.colors.textPrim};\n    cursor: pointer;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  margin-left: 8px;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const EditTodoForm = styled.form`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  padding: 0 8px;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: ${p => p.theme.colors.bcgPrim};\n  box-sizing: border-box;\n`;\n\nexport const EditTodoInput = styled.input`\n  flex-grow: 1;\n  font-weight: 600;\n  background-color: transparent;\n`;\n\nexport const SaveBtn = styled.button`\n  cursor: pointer;\n  margin-left: 20px;\n  border: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;\n","import { EditTodoForm, EditTodoInput, SaveBtn } from './TodoEditModal.styled';\nimport { FaSave } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\n\nexport function TodoEditModal({ textToUpdate, saveTodo, cancelEdit }) {\n  const [newText, setNewText] = useState(textToUpdate);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      cancelEdit();\n    }\n  };\n\n  const onFormInput = event => {\n    setNewText(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveTodo(newText);\n  };\n\n  return (\n    <EditTodoForm onSubmit={handleSubmit}>\n      <EditTodoInput\n        type=\"text\"\n        name=\"newText\"\n        value={newText}\n        onChange={onFormInput}\n        autoComplete=\"off\"\n      />\n      <SaveBtn type=\"submit\" aria-label=\"Save task\">\n        <FaSave size=\"20\" />\n      </SaveBtn>\n    </EditTodoForm>\n  );\n}\n","import { useState } from 'react';\nimport { useDragControls } from 'framer-motion';\nimport { ImCross } from 'react-icons/im';\nimport { FaCheck, FaArrowAltCircleRight, FaGripLines } from 'react-icons/fa';\nimport { MdEdit } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport {\n  ReorderItemStyled,\n  Label,\n  TodoText,\n  DeleteBtn,\n  Checkbox,\n  CheckBtn,\n  EditBtn,\n} from './TodoItem.styled';\nimport { TodoEditModal } from 'components/TodoEditModal/TodoEditModal';\n\nfunction TodoItem({ todo, completeTodo, editTodo, deleteTodo }) {\n  const [editOpen, setEditOpen] = useState(false);\n  const controls = useDragControls();\n  const { id, text, completed } = todo;\n\n  const toggleModal = () => {\n    setEditOpen(!editOpen);\n  };\n\n  const handleEdit = newText => {\n    toggleModal();\n    editTodo(id, newText);\n  };\n\n  const handleComplete = () => {\n    completeTodo(id);\n  };\n\n  const handleDelete = () => {\n    deleteTodo(id);\n  };\n\n  return (\n    <ReorderItemStyled\n      value={todo}\n      dragListener={false}\n      dragControls={controls}\n    >\n      <Box onPointerDown={e => controls.start(e)}>\n        <FaGripLines size=\"18\" cursor=\"grab\" color=\"#212121\" />\n      </Box>\n      <Label>\n        <Checkbox type=\"checkbox\" checked={completed ? true : false} readOnly />\n        <CheckBtn onClick={handleComplete} aria-label=\"Complete task\">\n          {completed ? (\n            <FaCheck size=\"18\" />\n          ) : (\n            <FaArrowAltCircleRight size=\"18\" />\n          )}\n        </CheckBtn>\n\n        <TodoText>{text}</TodoText>\n      </Label>\n\n      <Box ml=\"auto\" pl={2} display=\"flex\">\n        <EditBtn\n          type=\"button\"\n          aria-label=\"Edit task\"\n          onClick={toggleModal}\n          disabled={completed ? true : false}\n          className={completed ? '' : 'active'}\n        >\n          <MdEdit size=\"18\" />\n        </EditBtn>\n        <DeleteBtn\n          type=\"button\"\n          aria-label=\"Delete task\"\n          onClick={handleDelete}\n        >\n          <ImCross />\n        </DeleteBtn>\n      </Box>\n\n      {editOpen && (\n        <TodoEditModal\n          saveTodo={handleEdit}\n          textToUpdate={text}\n          cancelEdit={toggleModal}\n        />\n      )}\n    </ReorderItemStyled>\n  );\n}\n\nexport { TodoItem };\n","import styled from '@emotion/styled';\nimport { Reorder } from 'framer-motion';\n\nexport const ReorderListStyled = styled(Reorder.Group)`\n  display: grid;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;","import { TodoItem } from 'components/TodoItem/TodoItem';\nimport { ReorderListStyled } from './TodoList.styled';\n\nexport function TodoList({\n  todos,\n  setTodos,\n  completeTodo,\n  editTodo,\n  deleteTodo,\n}) {\n  return (\n    <ReorderListStyled axis=\"y\" values={todos} onReorder={setTodos}>\n      {todos.map(todo => {\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            completeTodo={completeTodo}\n            editTodo={editTodo}\n            deleteTodo={deleteTodo}\n          />\n        );\n      })}\n    </ReorderListStyled>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const AddForm = styled.form`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 16px;\n    margin: 0;\n    border-bottom: ${p => p.theme.borders.grey};\n    background-color: transparent;\n`\n\nexport const InputNew = styled.input`\n    padding: 4px;\n    border: none;\n    background-color: transparent;\n\n    :focus-visible {\n      outline: none;\n    }\n`\n\nexport const AddBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;","import { AddForm, InputNew, AddBtn } from './TodoAddNew.styled';\nimport { MdAddCircle, MdOutlineStickyNote2 } from 'react-icons/md';\nimport { useState } from 'react';\nimport { Box } from 'components/Box/Box';\n\nconst TodoAddNew = ({ onSubmit, bcgNoteColor }) => {\n  const [text, setText] = useState('');\n\n  const onFormInput = event => {\n    setText(event.currentTarget.value);\n  };\n\n  const addTodo = event => {\n    event.preventDefault();\n    setText('');\n    onSubmit(text);\n  };\n\n  return (\n    <Box bg={bcgNoteColor}>\n      <AddForm onSubmit={addTodo}>\n        <MdOutlineStickyNote2 size=\"24\" />\n        <InputNew\n          type=\"text\"\n          name=\"text\"\n          value={text}\n          onChange={onFormInput}\n          placeholder=\"New task\"\n        ></InputNew>\n        <AddBtn type=\"submit\" aria-label=\"Add task\">\n          <MdAddCircle size=\"20\" />\n        </AddBtn>\n      </AddForm>\n    </Box>\n  );\n};\n\nexport { TodoAddNew };\n","import { keyframes } from '@emotion/react';\nimport { fadeIn, fadeOut } from 'react-animations';\n\nexport const fadeInAnim = keyframes`${fadeIn}`;\n\nexport const fadeOutAnim = keyframes`${fadeOut}`;\n","import styled from '@emotion/styled';\nimport { fadeInAnim } from 'utils/animate';\n\nexport const NoteBoxOuter = styled.div`\n  position: relative;\n  cursor: ${p => (p.draggable ? 'grab' : 'default')};\n`;\n\nexport const NoteBoxInner = styled.div`\n  background-color: white;\n  max-width: 360px;\n  margin-bottom: 8px;\n  border: 1px solid grey;\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadows.box};\n\n  animation: ${fadeInAnim} 500ms;\n`;\n\nexport const NoteName = styled.h2`\n  font-size: 16px;\n`;\n\nexport const EditBtn = styled.button`\n  margin-left: 8px;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  color: white;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textSec};\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  margin-left: 8px;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  color: white;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textSec};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const EditNoteForm = styled.form`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  padding: 0 8px;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: ${p => p.theme.colors.bcgPrim};\n  box-sizing: border-box;\n`;\n\nexport const EditNoteInput = styled.input`\n  font-size: 16px;\n  font-weight: 700;\n  background-color: transparent;\n  color: white;\n`;\n\nexport const SaveBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;\n","import { EditNoteForm, EditNoteInput, SaveBtn } from './NoteEditModal.styled';\nimport { FaSave } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\n\nexport function NoteEditModal({ nameToUpdate, saveNoteName, cancelEdit }) {\n  const [newName, setNewName] = useState(nameToUpdate);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      cancelEdit();\n    }\n  };\n\n  const onFormInput = event => {\n    setNewName(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveNoteName(newName);\n  };\n\n  return (\n    <EditNoteForm onSubmit={handleSubmit}>\n      <EditNoteInput\n        type=\"text\"\n        name=\"newName\"\n        value={newName}\n        onChange={onFormInput}\n        autoComplete=\"off\"\n      />\n      <SaveBtn type=\"submit\" aria-label=\"Save task\">\n        <FaSave size=\"20\" />\n      </SaveBtn>\n    </EditNoteForm>\n  );\n}\n","import { createContext } from 'react';\n\nexport const MyContext = createContext();","import styled from '@emotion/styled';\nimport {fadeInAnim} from 'utils/animate'\n\nexport const Overlay = styled.div`\n  position: fixed;\n  padding-top: 8px;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n\n  animation: ${fadeInAnim} 500ms;\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrap } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWrap>{children}</ModalWrap>\n    </Overlay>,\n    modalRoot\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  padding: 16px;\n  text-align: center;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n`;\n\nexport const Text = styled.p`\n  color: #212112;\n`;\n","import { Box } from 'components/Box/Box';\nimport { Form, Text } from './Confirm.styled';\nimport { Button } from 'components/Buttons/Buttons';\n\nexport function Confirm({ onFormSubmit, toggleConfirm, name, isProcessing }) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onFormSubmit();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Text>\n        Delete note <b>{name}</b>?\n      </Text>\n      <Box\n        mt={4}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Button type=\"button\" aria-label=\"Cancel\" onClick={toggleConfirm}>\n          Cancel\n        </Button>\n\n        <Button type=\"submit\" aria-label=\"Delete note\" disabled={isProcessing}>\n          DELETE\n        </Button>\n      </Box>\n    </Form>\n  );\n}\n","import { Box } from 'components/Box/Box';\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { TodoList } from 'components/TodoList/TodoList';\nimport { TodoAddNew } from 'components/TodoAddNew/TodoAddNew';\nimport {\n  MdOutlineEdit,\n  MdDeleteForever,\n  MdFormatColorFill,\n} from 'react-icons/md';\nimport {\n  NoteBoxOuter,\n  NoteBoxInner,\n  NoteName,\n  EditBtn,\n  DeleteBtn,\n} from './NoteItem.styled';\nimport { NoteEditModal } from 'components/NoteEditModal/NoteEditModal';\nimport { MyContext } from 'utils/context';\nimport { HexColorPicker } from 'react-colorful';\nimport { Modal } from 'components/Modal/Modal';\nimport { Confirm } from 'components/Confirm/Confirm';\nimport {\n  deleteNote,\n  updateNoteColor,\n  updateNoteName,\n  updateNoteTodos,\n} from 'utils/operations';\n\nfunction NoteItem({ note }) {\n  const [todos, setTodos] = useState(note.todos);\n  const [noteColor, setNoteColor] = useState(note.color);\n  const [editNameOpen, setEditNameOpen] = useState(false);\n  const [editColorOpen, setEditColorOpen] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { dispatch } = useContext(MyContext);\n  const bcgNoteColor = note.color + '55';\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    dispatch({\n      type: 'editNoteTodos',\n      noteId: note._id,\n      newTodos: todos,\n    });\n\n    updateNoteTodos(note._id, todos);\n  }, [dispatch, note._id, todos]);\n\n  const toggleConfirm = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  const handleDeleteNote = note => {\n    setIsProcessing(true);\n\n    deleteNote(note)\n      .then(data => {\n        dispatch({ type: 'deleteNote', noteId: data._id });\n        setIsProcessing(false);\n      })\n      .catch(error => console.log(error));\n  };\n\n  const addTodo = data => {\n    if (data.trim() !== '') {\n      const newTodo = {\n        id: nanoid(4),\n        text: data,\n        completed: false,\n      };\n      setTodos([newTodo, ...todos]);\n    }\n  };\n\n  const editTodo = (todoId, newText) => {\n    setTodos(\n      todos.map(todo =>\n        todo.id === todoId ? { ...todo, text: newText } : todo\n      )\n    );\n  };\n\n  const completeTodo = todoId => {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const deleteTodo = todoId => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleNoteNameModal = () => {\n    setEditNameOpen(!editNameOpen);\n  };\n\n  const handleEditName = newName => {\n    toggleNoteNameModal();\n    dispatch({ type: 'editNoteName', noteId: note._id, newName });\n\n    updateNoteName(note._id, newName);\n  };\n\n  const toggleNoteColorModal = () => {\n    setEditColorOpen(!editColorOpen);\n\n    if (editColorOpen) {\n      updateNoteColor(note._id, noteColor, note.name);\n    }\n  };\n\n  const handleNoteColor = newColor => {\n    setNoteColor(newColor);\n    dispatch({\n      type: 'editNoteColor',\n      noteId: note._id,\n      newColor: noteColor,\n    });\n  };\n\n  return (\n    <NoteBoxOuter>\n      <NoteBoxInner>\n        {editColorOpen && (\n          <Box position=\"absolute\" top=\"0\" left=\"0\" zIndex=\"200\">\n            <HexColorPicker color={noteColor} onChange={handleNoteColor} />\n          </Box>\n        )}\n\n        <Box\n          bg={note.color}\n          p={2}\n          textAlign=\"center\"\n          color=\"white\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          position=\"relative\"\n        >\n          <NoteName>{note.name}</NoteName>\n\n          <Box ml=\"auto\" display=\"flex\">\n            <EditBtn\n              type=\"button\"\n              aria-label=\"Edit color\"\n              onClick={toggleNoteColorModal}\n            >\n              <MdFormatColorFill size=\"20\" />\n            </EditBtn>\n            <EditBtn\n              type=\"button\"\n              aria-label=\"Edit note\"\n              onClick={toggleNoteNameModal}\n            >\n              <MdOutlineEdit size=\"20\" />\n            </EditBtn>\n            <DeleteBtn\n              type=\"button\"\n              onClick={() => setShowConfirm(true)}\n              aria-label=\"Delete note\"\n            >\n              <MdDeleteForever size=\"20\" />\n            </DeleteBtn>\n          </Box>\n\n          {editNameOpen && (\n            <NoteEditModal\n              saveNoteName={handleEditName}\n              nameToUpdate={note.name}\n              cancelEdit={toggleNoteNameModal}\n            />\n          )}\n\n          {showConfirm && (\n            <Modal onClose={toggleConfirm}>\n              <Confirm\n                onFormSubmit={() => handleDeleteNote(note)}\n                toggleConfirm={toggleConfirm}\n                name={note.name}\n                isProcessing={isProcessing}\n              />\n            </Modal>\n          )}\n        </Box>\n\n        <TodoAddNew onSubmit={addTodo} bcgNoteColor={bcgNoteColor} />\n\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          deleteTodo={deleteTodo}\n          editTodo={editTodo}\n          completeTodo={completeTodo}\n        ></TodoList>\n      </NoteBoxInner>\n    </NoteBoxOuter>\n  );\n}\n\nexport { NoteItem };\n","import styled from '@emotion/styled';\n\nexport const ButtonsBox = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n","export function getRandomHexColor() {\n  const random = Math.floor(Math.random() * 16777215).toString(16);\n\n  const result = random.length === 5 ? random + '0' : random;\n\n  return `#${result}`;\n}\n","import { ButtonsBox } from './BtnsBlock.styled';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport { FaSort } from 'react-icons/fa';\nimport { Button } from 'components/Buttons/Buttons';\nimport { useState, useContext } from 'react';\nimport { MyContext } from 'utils/context';\nimport { addNote } from 'utils/operations';\nimport { getRandomHexColor } from 'utils/getRandomHexColor';\n\nexport function BtnsBlock({ toggleSortMenu }) {\n  const { dispatch } = useContext(MyContext);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const newNote = {\n    name: 'New note',\n    todos: [],\n    color: getRandomHexColor(),\n  };\n\n  const handleAdd = () => {\n    setIsProcessing(true);\n\n    addNote(newNote)\n      .then(data => {\n        dispatch({ type: 'addNote', newNote: data });\n        setIsProcessing(false);\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <ButtonsBox>\n      <Button type=\"button\" onClick={handleAdd} disabled={isProcessing}>\n        Add Note <MdAddCircleOutline size=\"24\" />\n      </Button>\n\n      <Button type=\"button\" onClick={toggleSortMenu}>\n        Sort Notes <FaSort size=\"24\" />\n      </Button>\n    </ButtonsBox>\n  );\n}\n","export const reducer = (mynotes, action) => {\n  switch (action.type) {\n    case 'getNotes':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes];\n\n    case 'addNote':\n      const newNote = {\n        ...action.newNote,\n      };\n      return [...mynotes, newNote];\n\n    case 'editNoteTodos':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, todos: action.newTodos }\n          : noteItem;\n      });\n\n    case 'deleteNote':\n      return mynotes.filter(note => note._id !== action.noteId);\n\n    case 'editNoteName':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, name: action.newName }\n          : noteItem;\n      });\n\n    case 'editNoteColor':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, color: action.newColor }\n          : noteItem;\n      });\n\n    case 'sortByNameUp':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) => a.name.localeCompare(b.name));\n\n    case 'sortByNameDown':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) => b.name.localeCompare(a.name));\n\n    case 'sortByCreatedUp':\n      if (!action.notes) {\n        return;\n      }\n\n      return [...action.notes].sort((a, b) =>\n        a.createdAt.localeCompare(b.createdAt)\n      );\n\n    case 'sortByCreatedDown':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) =>\n        b.createdAt.localeCompare(a.createdAt)\n      );\n\n    case 'sortByUpdatedUp':\n      if (!action.notes) {\n        return;\n      }\n\n      return [...action.notes].sort((a, b) =>\n        a.createdAt.localeCompare(b.updatedAt)\n      );\n\n    case 'sortByUpdatedDown':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) =>\n        b.createdAt.localeCompare(a.updatedAt)\n      );\n\n    default:\n      return mynotes;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const SortMenuBox = styled.div`\n  display: grid;\n  width: 300px;\n  text-align: center;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n  overflow: hidden;\n`;\n\nexport const SortButton = styled.button`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  width: 100%;\n  padding: 16px 0;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: ${p => (p.disabled ? null : 'pointer')};\n  border: none;\n  outline: ${p => p.theme.borders.grey};\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => (p.disabled ? null : 'grey')};\n    border: none;\n  }\n`;\n","import { SortMenuBox, SortButton } from './SortMenu.styled';\nimport {\n  FaSortAlphaUp,\n  FaSortAlphaDownAlt,\n  FaSortAmountUpAlt,\n  FaSortAmountDown,\n} from 'react-icons/fa';\n\nexport function SortMenu({ toggleSortMenu, sort, setSort }) {\n  const handleSortByNameUp = () => {\n    toggleSortMenu();\n    setSort('sortByNameUp');\n  };\n\n  const handleSortByNameDown = () => {\n    toggleSortMenu();\n    setSort('sortByNameDown');\n  };\n\n  const handleSortByCreatedUp = () => {\n    toggleSortMenu();\n    setSort('sortByCreatedUp');\n  };\n\n  const handleSortByCreatedDown = () => {\n    toggleSortMenu();\n    setSort('sortByCreatedDown');\n  };\n\n  const handleSortByUpdatedUp = () => {\n    toggleSortMenu();\n    setSort('sortByUpdatedUp');\n  };\n\n  const handleSortByUpdatedDown = () => {\n    toggleSortMenu();\n    setSort('sortByUpdatedDown');\n  };\n\n  return (\n    <SortMenuBox>\n      <SortButton\n        onClick={handleSortByNameUp}\n        disabled={sort === 'sortByNameUp'}\n      >\n        By name\n        <FaSortAlphaUp />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByNameDown}\n        disabled={sort === 'sortByNameDown'}\n      >\n        By name\n        <FaSortAlphaDownAlt />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByCreatedUp}\n        disabled={sort === 'sortByCreatedUp'}\n      >\n        By create time\n        <FaSortAmountUpAlt />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByCreatedDown}\n        disabled={sort === 'sortByCreatedDown'}\n      >\n        By create time\n        <FaSortAmountDown />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByUpdatedUp}\n        disabled={sort === 'sortByUpdatedUp'}\n      >\n        By update time\n        <FaSortAmountUpAlt />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByUpdatedDown}\n        disabled={sort === 'sortByUpdatedDown'}\n      >\n        By update time\n        <FaSortAmountDown />\n      </SortButton>\n    </SortMenuBox>\n  );\n}\n","import { MasonryBox } from 'components/Box/Box';\nimport { useState, useEffect, useReducer } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { NoteItem } from 'components/NoteItem/NoteItem';\nimport { BtnsBlock } from 'components/BtnsBlock/BtnsBlock';\nimport { reducer } from 'utils/reducer';\nimport { MyContext } from 'utils/context';\nimport { Footer } from 'components/Footer/Footer';\nimport { getNotes } from 'utils/operations';\nimport { Box } from 'components/Box/Box';\nimport { Modal } from 'components/Modal/Modal';\nimport { SortMenu } from 'components/SortMenu/SortMenu';\n\nexport default function NotesPage({ isLoggedIn, sort, setSort }) {\n  const [mynotes, dispatch] = useReducer(reducer, []);\n  const [isProcessing, setIsProcessing] = useState(true);\n  const [showSortMenu, setShowSortMenu] = useState(false);\n\n  useEffect(() => {\n    getNotes()\n      .then(notes => {\n        dispatch({ type: 'getNotes', notes });\n        return notes;\n      })\n      .then(notes => {\n        dispatch({ type: sort, notes });\n      })\n      .catch(error => {})\n      .finally(() => {\n        setIsProcessing(false);\n      });\n  }, [sort]);\n\n  const breakpointColumnsObj = {\n    default: 7,\n    2163: 6,\n    1855: 5,\n    1547: 4,\n    1239: 3,\n    931: 2,\n    623: 1,\n  };\n\n  const toggleSortMenu = () => {\n    setShowSortMenu(!showSortMenu);\n  };\n\n  return (\n    <>\n      {!isLoggedIn && <Navigate to=\"/\" />}\n      <MyContext.Provider value={{ dispatch }}>\n        {isProcessing && (\n          <Box pt={6} textAlign=\"center\" color=\"white\">\n            <h1>Loading your notes ...</h1>\n          </Box>\n        )}\n\n        {!isProcessing && !mynotes.length && (\n          <Box pt={6} textAlign=\"center\" color=\"white\">\n            <h1>Notes list is empty</h1>\n          </Box>\n        )}\n\n        {!isProcessing && mynotes.length > 0 && (\n          <MasonryBox breakpointCols={breakpointColumnsObj}>\n            {mynotes.map((noteItem, idx) => {\n              return <NoteItem key={noteItem._id} idx={idx} note={noteItem} />;\n            })}\n          </MasonryBox>\n        )}\n\n        {showSortMenu && (\n          <Modal onClose={toggleSortMenu}>\n            <SortMenu\n              toggleSortMenu={toggleSortMenu}\n              sort={sort}\n              setSort={setSort}\n            />\n          </Modal>\n        )}\n\n        <Footer>\n          <BtnsBlock toggleSortMenu={toggleSortMenu} />\n        </Footer>\n      </MyContext.Provider>\n    </>\n  );\n}\n"],"names":["Footer","styled","ReorderItemStyled","Reorder","p","theme","colors","bcgPrim","borders","light","Label","Checkbox","textSec","CheckBtn","TodoText","fontSizes","xs","textPrim","EditBtn","DeleteBtn","EditTodoForm","EditTodoInput","SaveBtn","TodoEditModal","textToUpdate","saveTodo","cancelEdit","useState","newText","setNewText","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","onSubmit","preventDefault","type","name","value","onChange","currentTarget","autoComplete","size","TodoItem","todo","completeTodo","editTodo","deleteTodo","editOpen","setEditOpen","controls","useDragControls","id","text","completed","toggleModal","dragListener","dragControls","Box","onPointerDown","e","start","cursor","color","checked","readOnly","onClick","ml","pl","display","disabled","className","ReorderListStyled","TodoList","todos","setTodos","axis","values","onReorder","map","AddForm","grey","InputNew","AddBtn","TodoAddNew","bcgNoteColor","setText","bg","placeholder","fadeInAnim","keyframes","fadeIn","NoteBoxOuter","fadeOut","draggable","NoteBoxInner","radii","normal","shadows","box","NoteName","EditNoteForm","EditNoteInput","NoteEditModal","nameToUpdate","saveNoteName","newName","setNewName","MyContext","createContext","Overlay","ModalWrap","modalRoot","document","querySelector","Modal","onClose","children","createPortal","target","Form","Text","Confirm","onFormSubmit","toggleConfirm","isProcessing","mt","justifyContent","alignItems","NoteItem","note","noteColor","setNoteColor","editNameOpen","setEditNameOpen","editColorOpen","setEditColorOpen","showConfirm","setShowConfirm","dispatch","useContext","setIsProcessing","isFirstRender","useRef","current","noteId","_id","newTodos","updateNoteTodos","toggleNoteNameModal","position","top","left","zIndex","newColor","textAlign","updateNoteColor","updateNoteName","deleteNote","then","data","catch","error","console","log","handleDeleteNote","trim","newTodo","nanoid","todoId","filter","ButtonsBox","getRandomHexColor","random","Math","floor","toString","result","length","BtnsBlock","toggleSortMenu","newNote","addNote","reducer","mynotes","action","notes","noteItem","sort","a","b","localeCompare","createdAt","updatedAt","SortMenuBox","SortButton","SortMenu","setSort","NotesPage","isLoggedIn","useReducer","showSortMenu","setShowSortMenu","getNotes","finally","to","Provider","pt","breakpointCols","default","idx"],"sourceRoot":""}