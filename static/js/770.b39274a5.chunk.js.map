{"version":3,"file":"static/js/770.b39274a5.chunk.js","mappings":"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","sources":["components/Buttons/Buttons.jsx","components/Footer/Footer.jsx","components/Header/Header.styled.jsx","components/Header/Header.js","components/TodoItem/TodoItem.styled.jsx","components/TodoEditModal/TodoEditModal.styled.jsx","components/TodoEditModal/TodoEditModal.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.styled.jsx","components/TodoList/TodoList.js","components/TodoAddNew/TodoAddNew.styled.jsx","components/TodoAddNew/TodoAddNew.js","utils/animate.js","components/NoteItem/NoteItem.styled.jsx","components/NoteEditModal/NoteEditModal.styled.jsx","components/NoteEditModal/NoteEditModal.js","utils/context.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/Confirm/Confirm.styled.jsx","components/Confirm/Confirm.js","components/NoteItem/NoteItem.js","components/BtnsBlock/BtnsBlock.styled.jsx","utils/getRandomHexColor.js","components/BtnsBlock/BtnsBlock.js","utils/reducer.js","components/SortMenu/SortMenu.styled.jsx","components/SortMenu/SortMenu.js","pages/NotesPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  cursor: pointer;\n  height: 32px;\n  border: 1px solid grey;\n  border-radius: 16px;\n  background-color: lightgrey;\n  color: grey;\n  font-size: 14px;\n  font-weight: 600;\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n\n  :hover {\n    box-shadow: ${p => (p.disabled ? null: p.theme.shadows.box)};\n    color: ${p => (p.disabled ? \"grey\": '#212121')};\n    background-color: ${p => (p.disabled ? \"lightgrey\": '#FFFFFF')};\n  }\n`;\n\nexport const ButtonLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  padding: 0 8px;\n  border: 1px solid grey;\n  border-radius: 16px;\n  background-color: lightgrey;\n  color: grey;\n  font-size: 14px;\n  font-weight: 700;\n  box-shadow: none;\n  text-decoration: none;\n  cursor: pointer;\n\n  transition: box-shadow 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n\n  :hover {\n    box-shadow: ${p => (p.disabled ? null: p.theme.shadows.box)};\n    color: ${p => (p.disabled ? \"grey\": '#212121')};\n    background-color: ${p => (p.disabled ? \"lightgrey\": '#FFFFFF')};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Footer = styled.div`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  \n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 40px;\n  background: grey;\n  color: #ffffff;\n  z-index: 1000;\n`;\n\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 52px;\n  padding: 0 8px;\n  background: grey;\n  color: #ffffff;\n  z-index: 1000;\n`;\n\nexport const LogoLink = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const LogoText = styled.h1`\n  font-size: 32px;\n  font-weight: 400;\n  color: white;\n`;\n\nexport const My = styled.span`\n  color: lightgrey;\n`;\n\nexport const UserName = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-right: 16px;\n`;\n\nexport const Mobile = styled.span`\n  height: 24px;\n\n  @media screen and (min-width: 480px) {\n    display: none;\n  }\n`;\n\nexport const Desktop = styled.span`\n  @media screen and (max-width: 479.98px) {\n    display: none;\n  }\n`;\n","import {\n  HeaderWrap,\n  LogoLink,\n  LogoText,\n  My,\n  UserName,\n  Mobile,\n  Desktop,\n} from 'components/Header/Header.styled';\nimport { Box } from 'components/Box/Box';\nimport { ButtonLink } from 'components/Buttons/Buttons';\nimport { MdLogout } from 'react-icons/md';\n\nexport function Header({ user, handleLogout, isLoggedIn }) {\n  return (\n    <HeaderWrap>\n      <LogoLink to=\"/\">\n        <LogoText>\n          <My>My</My>Notes\n        </LogoText>\n      </LogoLink>\n\n      {isLoggedIn && (\n        <Box display=\"flex\" alignItems=\"center\">\n          {user && <UserName>{user}</UserName>}\n          <ButtonLink to=\"/logout\" onClick={handleLogout}>\n            <Desktop>Logout</Desktop>\n            <Mobile>{<MdLogout size=\"24\" />}</Mobile>\n          </ButtonLink>\n        </Box>\n      )}\n    </HeaderWrap>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Reorder } from 'framer-motion';\n\nexport const ReorderItemStyled = styled(Reorder.Item)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.bcgPrim};\n  }\n\n  :not(:last-child) {\n    border-bottom: ${p => p.theme.borders.light};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nexport const Checkbox = styled.input`\n  display: none;\n\n  :checked + button {\n    color: ${p => p.theme.colors.textSec};\n  }\n  :checked ~ span {\n    text-decoration: line-through grey 2px;\n    color: ${p => p.theme.colors.textSec};\n  }\n`;\n\nexport const CheckBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: green;\n`;\n\nexport const TodoText = styled.span`\n  max-width: 220px;\n  margin-left: 8px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: 600;\n  color: ${p => p.theme.colors.textPrim};\n  word-wrap: break-word;\n`;\n\nexport const EditBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover.active {\n    color: ${p => p.theme.colors.textPrim};\n    cursor: pointer;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  margin-left: 8px;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const EditTodoForm = styled.form`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  padding: 0 8px;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: ${p => p.theme.colors.bcgPrim};\n  box-sizing: border-box;\n`;\n\nexport const EditTodoInput = styled.input`\n  flex-grow: 1;\n  font-weight: 600;\n  background-color: transparent;\n`;\n\nexport const SaveBtn = styled.button`\n  cursor: pointer;\n  margin-left: 20px;\n  border: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;\n","import { EditTodoForm, EditTodoInput, SaveBtn } from './TodoEditModal.styled';\nimport { FaSave } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\n\nexport function TodoEditModal({ textToUpdate, saveTodo, cancelEdit }) {\n  const [newText, setNewText] = useState(textToUpdate);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      cancelEdit();\n    }\n  };\n\n  const onFormInput = event => {\n    setNewText(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveTodo(newText);\n  };\n\n  return (\n    <EditTodoForm onSubmit={handleSubmit}>\n      <EditTodoInput\n        type=\"text\"\n        name=\"newText\"\n        value={newText}\n        onChange={onFormInput}\n        autoComplete=\"off\"\n      />\n      <SaveBtn type=\"submit\" aria-label=\"Save task\">\n        <FaSave size=\"20\" />\n      </SaveBtn>\n    </EditTodoForm>\n  );\n}\n","import { useState } from 'react';\nimport { useDragControls } from 'framer-motion';\nimport { ImCross } from 'react-icons/im';\nimport { FaCheck, FaArrowAltCircleRight, FaGripLines } from 'react-icons/fa';\nimport { MdEdit } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport {\n  ReorderItemStyled,\n  Label,\n  TodoText,\n  DeleteBtn,\n  Checkbox,\n  CheckBtn,\n  EditBtn,\n} from './TodoItem.styled';\nimport { TodoEditModal } from 'components/TodoEditModal/TodoEditModal';\n\nfunction TodoItem({ todo, completeTodo, editTodo, deleteTodo }) {\n  const [editOpen, setEditOpen] = useState(false);\n  const controls = useDragControls();\n  const { id, text, completed } = todo;\n\n  const toggleModal = () => {\n    setEditOpen(!editOpen);\n  };\n\n  const handleEdit = newText => {\n    toggleModal();\n    editTodo(id, newText);\n  };\n\n  const handleComplete = () => {\n    completeTodo(id);\n  };\n\n  const handleDelete = () => {\n    deleteTodo(id);\n  };\n\n  return (\n    <ReorderItemStyled\n      value={todo}\n      dragListener={false}\n      dragControls={controls}\n    >\n      <Box onPointerDown={e => controls.start(e)}>\n        <FaGripLines size=\"18\" cursor=\"grab\" color=\"#212121\" />\n      </Box>\n      <Label>\n        <Checkbox type=\"checkbox\" checked={completed ? true : false} readOnly />\n        <CheckBtn onClick={handleComplete} aria-label=\"Complete task\">\n          {completed ? (\n            <FaCheck size=\"18\" />\n          ) : (\n            <FaArrowAltCircleRight size=\"18\" />\n          )}\n        </CheckBtn>\n\n        <TodoText>{text}</TodoText>\n      </Label>\n\n      <Box ml=\"auto\" pl={2} display=\"flex\">\n        <EditBtn\n          type=\"button\"\n          aria-label=\"Edit task\"\n          onClick={toggleModal}\n          disabled={completed ? true : false}\n          className={completed ? '' : 'active'}\n        >\n          <MdEdit size=\"18\" />\n        </EditBtn>\n        <DeleteBtn\n          type=\"button\"\n          aria-label=\"Delete task\"\n          onClick={handleDelete}\n        >\n          <ImCross />\n        </DeleteBtn>\n      </Box>\n\n      {editOpen && (\n        <TodoEditModal\n          saveTodo={handleEdit}\n          textToUpdate={text}\n          cancelEdit={toggleModal}\n        />\n      )}\n    </ReorderItemStyled>\n  );\n}\n\nexport { TodoItem };\n","import styled from '@emotion/styled';\nimport { Reorder } from 'framer-motion';\n\nexport const ReorderListStyled = styled(Reorder.Group)`\n  display: grid;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;","import { TodoItem } from 'components/TodoItem/TodoItem';\nimport { ReorderListStyled } from './TodoList.styled';\n\nexport function TodoList({\n  todos,\n  setTodos,\n  completeTodo,\n  editTodo,\n  deleteTodo,\n}) {\n  return (\n    <ReorderListStyled axis=\"y\" values={todos} onReorder={setTodos}>\n      {todos.map(todo => {\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            completeTodo={completeTodo}\n            editTodo={editTodo}\n            deleteTodo={deleteTodo}\n          />\n        );\n      })}\n    </ReorderListStyled>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const AddForm = styled.form`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 16px;\n    margin: 0;\n    border-bottom: ${p => p.theme.borders.grey};\n    background-color: transparent;\n`\n\nexport const InputNew = styled.input`\n    padding: 4px;\n    border: none;\n    background-color: transparent;\n\n    :focus-visible {\n      outline: none;\n    }\n`\n\nexport const AddBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.textSec};\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;","import { AddForm, InputNew, AddBtn } from './TodoAddNew.styled';\nimport { MdAddCircle, MdOutlineStickyNote2 } from 'react-icons/md';\nimport { useState } from 'react';\nimport { Box } from 'components/Box/Box';\n\nconst TodoAddNew = ({ onSubmit, bcgNoteColor }) => {\n  const [text, setText] = useState('');\n\n  const onFormInput = event => {\n    setText(event.currentTarget.value);\n  };\n\n  const addTodo = event => {\n    event.preventDefault();\n    setText('');\n    onSubmit(text);\n  };\n\n  return (\n    <Box bg={bcgNoteColor}>\n      <AddForm onSubmit={addTodo}>\n        <MdOutlineStickyNote2 size=\"24\" />\n        <InputNew\n          type=\"text\"\n          name=\"text\"\n          value={text}\n          onChange={onFormInput}\n          placeholder=\"New task\"\n        ></InputNew>\n        <AddBtn type=\"submit\" aria-label=\"Add task\">\n          <MdAddCircle size=\"20\" />\n        </AddBtn>\n      </AddForm>\n    </Box>\n  );\n};\n\nexport { TodoAddNew };\n","import { keyframes } from '@emotion/react';\nimport { fadeIn, fadeOut } from 'react-animations';\n\nexport const fadeInAnim = keyframes`${fadeIn}`;\n\nexport const fadeOutAnim = keyframes`${fadeOut}`;\n","import styled from '@emotion/styled';\nimport { fadeInAnim } from 'utils/animate';\n\nexport const NoteBoxOuter = styled.div`\n  position: relative;\n  cursor: ${p => (p.draggable ? 'grab' : 'default')};\n`;\n\nexport const NoteBoxInner = styled.div`\n  background-color: white;\n  max-width: 360px;\n  margin-bottom: 8px;\n  border: 1px solid grey;\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadows.box};\n\n  animation: ${fadeInAnim} 500ms;\n`;\n\nexport const NoteName = styled.h2`\n  font-size: 16px;\n`;\n\nexport const EditBtn = styled.button`\n  margin-left: 8px;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  color: white;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textSec};\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  margin-left: 8px;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  color: white;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textSec};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const EditNoteForm = styled.form`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  padding: 0 8px;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: ${p => p.theme.colors.bcgPrim};\n  box-sizing: border-box;\n`;\n\nexport const EditNoteInput = styled.input`\n  font-size: 16px;\n  font-weight: 700;\n  background-color: transparent;\n  color: white;\n`;\n\nexport const SaveBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: ${p => p.theme.colors.textPrim};\n  }\n`;\n","import { EditNoteForm, EditNoteInput, SaveBtn } from './NoteEditModal.styled';\nimport { FaSave } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\n\nexport function NoteEditModal({ nameToUpdate, saveNoteName, cancelEdit }) {\n  const [newName, setNewName] = useState(nameToUpdate);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      cancelEdit();\n    }\n  };\n\n  const onFormInput = event => {\n    setNewName(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveNoteName(newName);\n  };\n\n  return (\n    <EditNoteForm onSubmit={handleSubmit}>\n      <EditNoteInput\n        type=\"text\"\n        name=\"newName\"\n        value={newName}\n        onChange={onFormInput}\n        autoComplete=\"off\"\n      />\n      <SaveBtn type=\"submit\" aria-label=\"Save task\">\n        <FaSave size=\"20\" />\n      </SaveBtn>\n    </EditNoteForm>\n  );\n}\n","import { createContext } from 'react';\n\nexport const MyContext = createContext();","import styled from '@emotion/styled';\nimport {fadeInAnim} from 'utils/animate'\n\nexport const Overlay = styled.div`\n  position: fixed;\n  padding-top: 8px;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n\n  animation: ${fadeInAnim} 500ms;\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrap } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWrap>{children}</ModalWrap>\n    </Overlay>,\n    modalRoot\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  padding: 16px;\n  text-align: center;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n`;\n\nexport const Text = styled.p`\n  color: #212112;\n`;\n","import { Box } from 'components/Box/Box';\nimport { Form, Text } from './Confirm.styled';\nimport { Button } from 'components/Buttons/Buttons';\n\nexport function Confirm({ onFormSubmit, toggleConfirm, name, isProcessing }) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onFormSubmit();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Text>\n        Delete note <b>{name}</b>?\n      </Text>\n      <Box\n        mt={4}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Button type=\"button\" aria-label=\"Cancel\" onClick={toggleConfirm}>\n          Cancel\n        </Button>\n\n        <Button type=\"submit\" aria-label=\"Delete note\" disabled={isProcessing}>\n          DELETE\n        </Button>\n      </Box>\n    </Form>\n  );\n}\n","import { Box } from 'components/Box/Box';\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { TodoList } from 'components/TodoList/TodoList';\nimport { TodoAddNew } from 'components/TodoAddNew/TodoAddNew';\nimport {\n  MdOutlineEdit,\n  MdDeleteForever,\n  MdFormatColorFill,\n} from 'react-icons/md';\nimport {\n  NoteBoxOuter,\n  NoteBoxInner,\n  NoteName,\n  EditBtn,\n  DeleteBtn,\n} from './NoteItem.styled';\nimport { NoteEditModal } from 'components/NoteEditModal/NoteEditModal';\nimport { MyContext } from 'utils/context';\nimport { HexColorPicker } from 'react-colorful';\nimport { Modal } from 'components/Modal/Modal';\nimport { Confirm } from 'components/Confirm/Confirm';\nimport {\n  deleteNote,\n  updateNoteColor,\n  updateNoteName,\n  updateNoteTodos,\n} from 'utils/operations';\n\nfunction NoteItem({ note, idx }) {\n  const [todos, setTodos] = useState(note.todos);\n  const [noteColor, setNoteColor] = useState(note.color);\n  const [editNameOpen, setEditNameOpen] = useState(false);\n  const [editColorOpen, setEditColorOpen] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { dispatch } = useContext(MyContext);\n  const bcgNoteColor = note.color + '55';\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    dispatch({\n      type: 'editNoteTodos',\n      noteId: note._id,\n      newTodos: todos,\n    });\n\n    updateNoteTodos(note._id, todos);\n  }, [dispatch, note._id, todos]);\n\n  const toggleConfirm = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  const handleDeleteNote = note => {\n    setIsProcessing(true);\n\n    deleteNote(note)\n      .then(data => {\n        dispatch({ type: 'deleteNote', noteId: data._id });\n        setIsProcessing(false);\n      })\n      .catch(error => console.log(error));\n  };\n\n  const addTodo = data => {\n    if (data.trim() !== '') {\n      const newTodo = {\n        id: nanoid(4),\n        text: data,\n        completed: false,\n      };\n      setTodos([newTodo, ...todos]);\n    }\n  };\n\n  const editTodo = (todoId, newText) => {\n    setTodos(\n      todos.map(todo =>\n        todo.id === todoId ? { ...todo, text: newText } : todo\n      )\n    );\n  };\n\n  const completeTodo = todoId => {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const deleteTodo = todoId => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleNoteNameModal = () => {\n    setEditNameOpen(!editNameOpen);\n  };\n\n  const handleEditName = newName => {\n    toggleNoteNameModal();\n    dispatch({ type: 'editNoteName', noteId: note._id, newName });\n\n    updateNoteName(note._id, newName);\n  };\n\n  const toggleNoteColorModal = () => {\n    setEditColorOpen(!editColorOpen);\n\n    if (editColorOpen) {\n      updateNoteColor(note._id, noteColor);\n    }\n  };\n\n  const handleNoteColor = newColor => {\n    setNoteColor(newColor);\n    dispatch({\n      type: 'editNoteColor',\n      noteId: note._id,\n      newColor: noteColor,\n    });\n  };\n\n  return (\n    <NoteBoxOuter>\n      <NoteBoxInner>\n        {editColorOpen && (\n          <Box position=\"absolute\" top=\"0\" left=\"0\" zIndex=\"200\">\n            <HexColorPicker color={noteColor} onChange={handleNoteColor} />\n          </Box>\n        )}\n\n        <Box\n          bg={note.color}\n          p={2}\n          textAlign=\"center\"\n          color=\"white\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          position=\"relative\"\n        >\n          <NoteName>{note.name}</NoteName>\n\n          <Box ml=\"auto\" display=\"flex\">\n            <EditBtn\n              type=\"button\"\n              aria-label=\"Edit color\"\n              onClick={toggleNoteColorModal}\n            >\n              <MdFormatColorFill size=\"20\" />\n            </EditBtn>\n            <EditBtn\n              type=\"button\"\n              aria-label=\"Edit note\"\n              onClick={toggleNoteNameModal}\n            >\n              <MdOutlineEdit size=\"20\" />\n            </EditBtn>\n            <DeleteBtn\n              type=\"button\"\n              onClick={() => setShowConfirm(true)}\n              aria-label=\"Delete note\"\n            >\n              <MdDeleteForever size=\"20\" />\n            </DeleteBtn>\n          </Box>\n\n          {editNameOpen && (\n            <NoteEditModal\n              saveNoteName={handleEditName}\n              nameToUpdate={note.name}\n              cancelEdit={toggleNoteNameModal}\n            />\n          )}\n\n          {showConfirm && (\n            <Modal onClose={toggleConfirm}>\n              <Confirm\n                onFormSubmit={() => handleDeleteNote(note)}\n                toggleConfirm={toggleConfirm}\n                name={note.name}\n                isProcessing={isProcessing}\n              />\n            </Modal>\n          )}\n        </Box>\n\n        <TodoAddNew onSubmit={addTodo} bcgNoteColor={bcgNoteColor} />\n\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          deleteTodo={deleteTodo}\n          editTodo={editTodo}\n          completeTodo={completeTodo}\n        ></TodoList>\n      </NoteBoxInner>\n    </NoteBoxOuter>\n  );\n}\n\nexport { NoteItem };\n","import styled from '@emotion/styled';\n\nexport const ButtonsBox = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n","export function getRandomHexColor() {\n  const random = Math.floor(Math.random() * 16777215).toString(16);\n\n  const result = random.length === 5 ? random + '0' : random;\n\n  return `#${result}`;\n}\n","import { ButtonsBox } from './BtnsBlock.styled';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport { FaSort } from 'react-icons/fa';\nimport { Button } from 'components/Buttons/Buttons';\nimport { useState, useContext } from 'react';\nimport { MyContext } from 'utils/context';\nimport { addNote } from 'utils/operations';\nimport { getRandomHexColor } from 'utils/getRandomHexColor';\n\nexport function BtnsBlock({ toggleSortMenu }) {\n  const { dispatch } = useContext(MyContext);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const newNote = {\n    name: 'New note',\n    todos: [],\n    color: getRandomHexColor(),\n  };\n\n  const handleAdd = () => {\n    setIsProcessing(true);\n\n    addNote(newNote)\n      .then(data => {\n        dispatch({ type: 'addNote', newNote: data });\n        setIsProcessing(false);\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <ButtonsBox>\n      <Button type=\"button\" onClick={handleAdd} disabled={isProcessing}>\n        Add Note <MdAddCircleOutline size=\"24\" />\n      </Button>\n\n      <Button type=\"button\" onClick={toggleSortMenu}>\n        Sort Notes <FaSort size=\"24\" />\n      </Button>\n    </ButtonsBox>\n  );\n}\n","export const reducer = (mynotes, action) => {\n  switch (action.type) {\n    case 'getNotes':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes];\n\n    case 'addNote':\n      const newNote = {\n        ...action.newNote,\n      };\n      return [...mynotes, newNote];\n\n    case 'editNoteTodos':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, todos: action.newTodos }\n          : noteItem;\n      });\n\n    case 'deleteNote':\n      return mynotes.filter(note => note._id !== action.noteId);\n\n    case 'editNoteName':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, name: action.newName }\n          : noteItem;\n      });\n\n    case 'editNoteColor':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, color: action.newColor }\n          : noteItem;\n      });\n\n    case 'sortByNameUp':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) => a.name.localeCompare(b.name));\n\n    case 'sortByNameDown':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) => b.name.localeCompare(a.name));\n\n    case 'sortByCreatedUp':\n      if (!action.notes) {\n        return;\n      }\n\n      return [...action.notes].sort((a, b) =>\n        a.createdAt.localeCompare(b.createdAt)\n      );\n\n    case 'sortByCreatedDown':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) =>\n        b.createdAt.localeCompare(a.createdAt)\n      );\n\n    case 'sortByUpdatedUp':\n      if (!action.notes) {\n        return;\n      }\n\n      return [...action.notes].sort((a, b) =>\n        a.createdAt.localeCompare(b.updatedAt)\n      );\n\n    case 'sortByUpdatedDown':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes].sort((a, b) =>\n        b.createdAt.localeCompare(a.updatedAt)\n      );\n\n    default:\n      return mynotes;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const SortMenuBox = styled.div`\n  display: grid;\n  width: 300px;\n  text-align: center;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n  overflow: hidden;\n`;\n\nexport const SortButton = styled.button`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  width: 100%;\n  padding: 16px 0;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: ${p => (p.disabled ? null : 'pointer')};\n  border: none;\n  outline: ${p => p.theme.borders.grey};\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => (p.disabled ? null : 'grey')};\n    border: none;\n  }\n`;\n","import { SortMenuBox, SortButton } from './SortMenu.styled';\nimport {\n  FaSortAlphaUp,\n  FaSortAlphaDownAlt,\n  FaSortAmountUpAlt,\n  FaSortAmountDown,\n} from 'react-icons/fa';\nimport { useContext } from 'react';\nimport { MyContext } from 'utils/context';\n\nexport function SortMenu({ toggleSortMenu, notes, sort, setSort }) {\n  const { dispatch } = useContext(MyContext);\n\n  const handleSortByNameUp = () => {\n    dispatch({ type: 'sortByNameUp', notes });\n    toggleSortMenu();\n    setSort('sortByNameUp');\n  };\n\n  const handleSortByNameDown = () => {\n    dispatch({ type: 'sortByNameDown', notes });\n    toggleSortMenu();\n    setSort('sortByNameDown');\n  };\n\n  const handleSortByCreatedUp = () => {\n    dispatch({ type: 'sortByCreatedUp', notes });\n    toggleSortMenu();\n    setSort('sortByCreatedUp');\n  };\n\n  const handleSortByCreatedDown = () => {\n    dispatch({ type: 'sortByCreatedDown', notes });\n    toggleSortMenu();\n    setSort('sortByCreatedDown');\n  };\n\n  const handleSortByUpdatedUp = () => {\n    dispatch({ type: 'sortByUpdatedUp', notes });\n    toggleSortMenu();\n    setSort('sortByUpdatedUp');\n  };\n\n  const handleSortByUpdatedDown = () => {\n    dispatch({ type: 'sortByUpdatedDown', notes });\n    toggleSortMenu();\n    setSort('sortByUpdatedDown');\n  };\n\n  return (\n    <SortMenuBox>\n      <SortButton\n        onClick={handleSortByNameUp}\n        disabled={sort === 'sortByNameUp'}\n      >\n        By name\n        <FaSortAlphaUp />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByNameDown}\n        disabled={sort === 'sortByNameDown'}\n      >\n        By name\n        <FaSortAlphaDownAlt />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByCreatedUp}\n        disabled={sort === 'sortByCreatedUp'}\n      >\n        By create time\n        <FaSortAmountUpAlt />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByCreatedDown}\n        disabled={sort === 'sortByCreatedDown'}\n      >\n        By create time\n        <FaSortAmountDown />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByUpdatedUp}\n        disabled={sort === 'sortByUpdatedUp'}\n      >\n        By update time\n        <FaSortAmountUpAlt />\n      </SortButton>\n\n      <SortButton\n        onClick={handleSortByUpdatedDown}\n        disabled={sort === 'sortByUpdatedDown'}\n      >\n        By update time\n        <FaSortAmountDown />\n      </SortButton>\n    </SortMenuBox>\n  );\n}\n","import { Header } from 'components/Header/Header';\nimport { MasonryBox } from 'components/Box/Box';\nimport { useState, useEffect, useReducer } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { NoteItem } from 'components/NoteItem/NoteItem';\nimport { BtnsBlock } from 'components/BtnsBlock/BtnsBlock';\nimport { reducer } from 'utils/reducer';\nimport { MyContext } from 'utils/context';\nimport { Footer } from 'components/Footer/Footer';\nimport { getNotes, logout } from 'utils/operations';\nimport { Box } from 'components/Box/Box';\nimport { Modal } from 'components/Modal/Modal';\nimport { SortMenu } from 'components/SortMenu/SortMenu';\n\nexport default function NotesPage({\n  user,\n  isLoggedIn,\n  setIsLoggedIn,\n  setToken,\n  sort,\n  setSort,\n}) {\n  const [mynotes, dispatch] = useReducer(reducer, []);\n  const [isProcessing, setIsProcessing] = useState(true);\n  const [showSortMenu, setShowSortMenu] = useState(false);\n\n  useEffect(() => {\n    getNotes()\n      .then(data => {\n        dispatch({ type: 'getNotes', notes: data });\n        setIsProcessing(false);\n      })\n      .catch(error => {});\n  }, []);\n\n  const breakpointColumnsObj = {\n    default: 7,\n    2163: 6,\n    1855: 5,\n    1547: 4,\n    1239: 3,\n    931: 2,\n    623: 1,\n  };\n\n  const handleLogout = () => {\n    logout().then(() => {\n      setIsLoggedIn(false);\n      setToken(null);\n    });\n  };\n\n  const toggleSortMenu = () => {\n    setShowSortMenu(!showSortMenu);\n  };\n\n  return (\n    <>\n      {!isLoggedIn && <Navigate to=\"/\" />}\n      <MyContext.Provider value={{ dispatch }}>\n        <Header\n          handleLogout={handleLogout}\n          user={user}\n          isLoggedIn={isLoggedIn}\n        />\n\n        {isProcessing && (\n          <Box pt={6} textAlign=\"center\" color=\"white\">\n            <h1>Loading your notes ...</h1>\n          </Box>\n        )}\n\n        {!isProcessing && !mynotes.length && (\n          <Box pt={6} textAlign=\"center\" color=\"white\">\n            <h1>Notes list is empty</h1>\n          </Box>\n        )}\n\n        {!isProcessing && mynotes.length > 0 && (\n          <MasonryBox breakpointCols={breakpointColumnsObj}>\n            {mynotes.map((noteItem, idx) => {\n              return <NoteItem key={noteItem._id} idx={idx} note={noteItem} />;\n            })}\n          </MasonryBox>\n        )}\n\n        {showSortMenu && (\n          <Modal onClose={toggleSortMenu}>\n            <SortMenu\n              toggleSortMenu={toggleSortMenu}\n              notes={mynotes}\n              sort={sort}\n              setSort={setSort}\n            />\n          </Modal>\n        )}\n\n        <Footer>\n          <BtnsBlock toggleSortMenu={toggleSortMenu} />\n        </Footer>\n      </MyContext.Provider>\n    </>\n  );\n}\n"],"names":["Button","styled","p","disabled","theme","shadows","box","ButtonLink","NavLink","Footer","HeaderWrap","LogoLink","LogoText","My","UserName","Mobile","Desktop","Header","user","handleLogout","isLoggedIn","to","Box","display","alignItems","onClick","size","ReorderItemStyled","Reorder","colors","bcgPrim","borders","light","Label","Checkbox","textSec","CheckBtn","TodoText","fontSizes","xs","textPrim","EditBtn","DeleteBtn","EditTodoForm","EditTodoInput","SaveBtn","TodoEditModal","textToUpdate","saveTodo","cancelEdit","useState","newText","setNewText","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","onSubmit","preventDefault","type","name","value","onChange","currentTarget","autoComplete","TodoItem","todo","completeTodo","editTodo","deleteTodo","editOpen","setEditOpen","controls","useDragControls","id","text","completed","toggleModal","dragListener","dragControls","onPointerDown","e","start","cursor","color","checked","readOnly","ml","pl","className","ReorderListStyled","TodoList","todos","setTodos","axis","values","onReorder","map","AddForm","grey","InputNew","AddBtn","TodoAddNew","bcgNoteColor","setText","bg","placeholder","fadeInAnim","keyframes","fadeIn","NoteBoxOuter","fadeOut","draggable","NoteBoxInner","radii","normal","NoteName","EditNoteForm","EditNoteInput","NoteEditModal","nameToUpdate","saveNoteName","newName","setNewName","MyContext","createContext","Overlay","ModalWrap","modalRoot","document","querySelector","Modal","onClose","children","createPortal","target","Form","Text","Confirm","onFormSubmit","toggleConfirm","isProcessing","mt","justifyContent","NoteItem","note","idx","noteColor","setNoteColor","editNameOpen","setEditNameOpen","editColorOpen","setEditColorOpen","showConfirm","setShowConfirm","dispatch","useContext","setIsProcessing","isFirstRender","useRef","current","noteId","_id","newTodos","updateNoteTodos","toggleNoteNameModal","position","top","left","zIndex","newColor","textAlign","updateNoteColor","updateNoteName","deleteNote","then","data","catch","error","console","log","handleDeleteNote","trim","newTodo","nanoid","todoId","filter","ButtonsBox","getRandomHexColor","random","Math","floor","toString","result","length","BtnsBlock","toggleSortMenu","newNote","addNote","reducer","mynotes","action","notes","noteItem","sort","a","b","localeCompare","createdAt","updatedAt","SortMenuBox","SortButton","SortMenu","setSort","NotesPage","setIsLoggedIn","setToken","useReducer","showSortMenu","setShowSortMenu","getNotes","Provider","logout","pt","breakpointCols","default"],"sourceRoot":""}