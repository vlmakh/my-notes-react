{"version":3,"file":"static/js/989.ac144ee8.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/TodoItem/TodoItem.styled.jsx","components/TodoEditModal/TodoEditModal.styled.jsx","components/TodoEditModal/TodoEditModal.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.styled.jsx","components/TodoList/TodoList.js","components/TodoAddNew/TodoAddNew.styled.jsx","components/TodoAddNew/TodoAddNew.js","utils/animate.js","components/NoteItem/NoteItem.styled.jsx","components/NoteEditModal/NoteEditModal.styled.jsx","components/NoteEditModal/NoteEditModal.js","utils/context.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/Confirm/Confirm.styled.jsx","components/Confirm/Confirm.js","components/NoteItem/NoteItem.js","components/BtnsBlock/BtnsBlock.styled.jsx","utils/getRandomHexColor.js","components/BtnsBlock/BtnsBlock.js","utils/reducer.js","pages/NotesPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport Masonry from 'react-masonry-css';\n\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  shadow,\n  flexbox,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  typography,\n  space,\n  color,\n  layout,\n  border,\n  shadow,\n  flexbox,\n  position,\n);\n\nexport const MasonryBox = styled(Masonry)`\n  display: flex;\n  column-gap: 8px;\n  padding: 60px 8px 40px 8px;\n  width: auto;  \n`;\n","import styled from '@emotion/styled';\nimport { Reorder } from 'framer-motion';\n\nexport const ReorderItemStyled = styled(Reorder.Item)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: lightgrey;\n  }\n\n  :not(:last-child) {\n    border-bottom: 1px solid lightgrey;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nexport const Checkbox = styled.input`\n  display: none;\n\n  :checked + button {\n    color: grey;\n  }\n  :checked ~ span {\n    text-decoration: line-through grey 2px;\n    color: grey;\n  }\n`;\n\nexport const CheckBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: green;\n`;\n\nexport const TodoText = styled.span`\n  max-width: 220px;\n  margin-left: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  color: #212121;\n  word-wrap: break-word;\n`;\n\nexport const EditBtn = styled.button`\n  /* margin-left: auto; */\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover.active {\n    color: #212121;\n    cursor: pointer;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  margin-left: 8px;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const EditTodoForm = styled.form`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  padding: 0 8px;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: lightgrey;\n  box-sizing: border-box;\n`;\n\nexport const EditTodoInput = styled.input`\n  flex-grow: 1;\n  font-weight: 600;\n  background-color: transparent;\n`;\n\nexport const SaveBtn = styled.button`\n  cursor: pointer;\n  margin-left: 20px;\n  border: none;\n  background-color: transparent;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: #212121;\n  }\n`;\n","import { EditTodoForm, EditTodoInput, SaveBtn } from './TodoEditModal.styled';\nimport { FaSave } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\n\nexport function TodoEditModal({ textToUpdate, saveTodo, cancelEdit }) {\n  const [newText, setNewText] = useState(textToUpdate);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      cancelEdit();\n    }\n  };\n\n  const onFormInput = event => {\n    setNewText(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveTodo(newText);\n  };\n\n  return (\n    <EditTodoForm onSubmit={handleSubmit}>\n      <EditTodoInput\n        type=\"text\"\n        name=\"newText\"\n        value={newText}\n        onChange={onFormInput}\n        autoComplete=\"off\"\n      />\n      <SaveBtn type=\"submit\" aria-label=\"Save task\">\n        <FaSave size=\"20\" />\n      </SaveBtn>\n    </EditTodoForm>\n  );\n}\n","import { useState } from 'react';\nimport { useDragControls } from 'framer-motion';\nimport { ImCross } from 'react-icons/im';\nimport { FaCheck, FaArrowAltCircleRight, FaGripLines } from 'react-icons/fa';\nimport { MdEdit } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport {\n  ReorderItemStyled,\n  Label,\n  TodoText,\n  DeleteBtn,\n  Checkbox,\n  CheckBtn,\n  EditBtn,\n} from './TodoItem.styled';\nimport { TodoEditModal } from 'components/TodoEditModal/TodoEditModal';\n\nfunction TodoItem({ todo, completeTodo, editTodo, deleteTodo }) {\n  const [editOpen, setEditOpen] = useState(false);\n  const controls = useDragControls();\n  const { id, text, completed } = todo;\n\n  const toggleModal = () => {\n    setEditOpen(!editOpen);\n  };\n\n  const handleEdit = newText => {\n    toggleModal();\n    editTodo(id, newText);\n  };\n\n  const handleComplete = () => {\n    completeTodo(id);\n  };\n\n  const handleDelete = () => {\n    deleteTodo(id);\n  };\n\n  return (\n    <ReorderItemStyled\n      value={todo}\n      dragListener={false}\n      dragControls={controls}\n    >\n      <Box onPointerDown={e => controls.start(e)}>\n        <FaGripLines size=\"18\" cursor=\"grab\" color=\"#212121\" />\n      </Box>\n      <Label>\n        <Checkbox type=\"checkbox\" checked={completed ? true : false} readOnly />\n        <CheckBtn onClick={handleComplete} aria-label=\"Complete task\">\n          {completed ? (\n            <FaCheck size=\"18\" />\n          ) : (\n            <FaArrowAltCircleRight size=\"18\" />\n          )}\n        </CheckBtn>\n\n        <TodoText>{text}</TodoText>\n      </Label>\n\n      <Box ml=\"auto\" pl={2} display=\"flex\">\n        <EditBtn\n          type=\"button\"\n          aria-label=\"Edit task\"\n          onClick={toggleModal}\n          disabled={completed ? true : false}\n          className={completed ? '' : 'active'}\n        >\n          <MdEdit size=\"18\" />\n        </EditBtn>\n        <DeleteBtn\n          type=\"button\"\n          aria-label=\"Delete task\"\n          onClick={handleDelete}\n        >\n          <ImCross />\n        </DeleteBtn>\n      </Box>\n\n      {editOpen && (\n        <TodoEditModal\n          saveTodo={handleEdit}\n          textToUpdate={text}\n          cancelEdit={toggleModal}\n        />\n      )}\n    </ReorderItemStyled>\n  );\n}\n\nexport { TodoItem };\n","import styled from '@emotion/styled';\nimport { Reorder } from 'framer-motion';\n\nexport const ReorderListStyled = styled(Reorder.Group)`\n  display: grid;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;","import { TodoItem } from 'components/TodoItem/TodoItem';\nimport { ReorderListStyled } from './TodoList.styled';\n\nexport function TodoList({\n  todos,\n  setTodos,\n  completeTodo,\n  editTodo,\n  deleteTodo,\n}) {\n  return (\n    <ReorderListStyled axis=\"y\" values={todos} onReorder={setTodos}>\n      {todos.map(todo => {\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            completeTodo={completeTodo}\n            editTodo={editTodo}\n            deleteTodo={deleteTodo}\n          />\n        );\n      })}\n    </ReorderListStyled>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const AddForm = styled.form`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 16px;\n    margin: 0;\n    border-bottom: 1px solid grey;\n    background-color: transparent;\n`\n\nexport const InputNew = styled.input`\n    padding: 4px;\n    border: none;\n    background-color: transparent;\n\n    :focus-visible {\n      outline: none;\n    }\n`\n\nexport const AddBtn = styled.button`\n  cursor: pointer;\n  /* margin-left: auto; */\n  border: none;\n  background-color: transparent;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: #212121;\n  }\n`;","import { AddForm, InputNew, AddBtn } from './TodoAddNew.styled';\nimport { MdAddCircle, MdOutlineStickyNote2 } from 'react-icons/md';\nimport { useState } from 'react';\nimport { Box } from 'components/Box/Box';\n\nconst TodoAddNew = ({ onSubmit, bcgNoteColor }) => {\n  const [text, setText] = useState('');\n\n  const onFormInput = event => {\n    setText(event.currentTarget.value);\n  };\n\n  const addTodo = event => {\n    event.preventDefault();\n    setText('');\n    onSubmit(text);\n  };\n\n  return (\n    <Box bg={bcgNoteColor}>\n      <AddForm onSubmit={addTodo}>\n        <MdOutlineStickyNote2 size=\"24\" />\n        <InputNew\n          type=\"text\"\n          name=\"text\"\n          value={text}\n          onChange={onFormInput}\n          placeholder=\"New task\"\n        ></InputNew>\n        <AddBtn type=\"submit\" aria-label=\"Add task\">\n          <MdAddCircle size=\"20\" />\n        </AddBtn>\n      </AddForm>\n    </Box>\n  );\n};\n\nexport { TodoAddNew };\n","import { keyframes } from '@emotion/react';\nimport { fadeIn, fadeOut } from 'react-animations';\n\nexport const fadeInAnim = keyframes`${fadeIn}`;\n\nexport const fadeOutAnim = keyframes`${fadeOut}`;\n","import styled from '@emotion/styled';\nimport { fadeInAnim } from 'utils/animate';\n\nexport const NoteBoxOuter = styled.div`\n  position: relative;\n  cursor: ${p => (p.draggable ? 'grab' : 'default')};\n`;\n\nexport const NoteBoxInner = styled.div`\n  background-color: white;\n  max-width: 360px;\n  margin-bottom: 8px;\n  border: 1px solid grey;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n\n  animation: ${fadeInAnim} 500ms;\n`;\n\nexport const NoteName = styled.h2`\n  font-size: 16px;\n`;\n\nexport const EditBtn = styled.button`\n  margin-left: 8px;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  color: white;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: grey;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  margin-left: 8px;\n  border: none;\n  background-color: transparent;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  color: white;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: grey;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const EditNoteForm = styled.form`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  left: 0;\n  padding: 0 8px;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: lightgrey;\n  box-sizing: border-box;\n`;\n\nexport const EditNoteInput = styled.input`\n  font-size: 16px;\n  font-weight: 700;\n  background-color: transparent;\n  color: white;\n`;\n\nexport const SaveBtn = styled.button`\n  cursor: pointer;\n  /* margin-left: 20px; */\n  border: none;\n  background-color: transparent;\n  color: grey;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: #212121;\n  }\n`;\n","import { EditNoteForm, EditNoteInput, SaveBtn } from './NoteEditModal.styled';\nimport { FaSave } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\n\nexport function NoteEditModal({ nameToUpdate, saveNoteName, cancelEdit }) {\n  const [newName, setNewName] = useState(nameToUpdate);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      cancelEdit();\n    }\n  };\n\n  const onFormInput = event => {\n    setNewName(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveNoteName(newName);\n  };\n\n  return (\n    <EditNoteForm onSubmit={handleSubmit}>\n      <EditNoteInput\n        type=\"text\"\n        name=\"newName\"\n        value={newName}\n        onChange={onFormInput}\n        autoComplete=\"off\"\n      />\n      <SaveBtn type=\"submit\" aria-label=\"Save task\">\n        <FaSave size=\"20\" />\n      </SaveBtn>\n    </EditNoteForm>\n  );\n}\n","import { createContext } from 'react';\n\nexport const MyContext = createContext();","import styled from '@emotion/styled';\nimport {fadeInAnim} from 'utils/animate'\n\nexport const Overlay = styled.div`\n  position: fixed;\n  padding-top: 8px;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n\n  animation: ${fadeInAnim} 500ms;\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrap } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWrap>{children}</ModalWrap>\n    </Overlay>,\n    modalRoot\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  padding: 16px;\n  text-align: center;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n`;\n\nexport const Text = styled.p`\n  color: #212112;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  color: #212112;\n  font-weight: 700;\n  border-radius: 4px;\n\n  transition: box-shadow 250ms linear;\n\n  :hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);    \n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport { Form, Text, Button } from './Confirm.styled';\n\nexport function Confirm({ onFormSubmit, toggleConfirm, name }) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onFormSubmit();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Text>\n        Delete note <b>{name}</b>?\n      </Text>\n      <Box\n        mt={3}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Button type=\"button\" aria-label=\"Cancel\" onClick={toggleConfirm}>\n          Cancel\n        </Button>\n\n        <Button type=\"submit\" aria-label=\"Delete note\">\n          DELETE\n        </Button>\n      </Box>\n    </Form>\n  );\n}\n","import { Box } from 'components/Box/Box';\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { TodoList } from 'components/TodoList/TodoList';\nimport { TodoAddNew } from 'components/TodoAddNew/TodoAddNew';\nimport {\n  MdOutlineEdit,\n  MdDeleteForever,\n  MdFormatColorFill,\n} from 'react-icons/md';\nimport {\n  NoteBoxOuter,\n  NoteBoxInner,\n  NoteName,\n  EditBtn,\n  DeleteBtn,\n} from './NoteItem.styled';\nimport { NoteEditModal } from 'components/NoteEditModal/NoteEditModal';\nimport { MyContext } from 'utils/context';\nimport { HexColorPicker } from 'react-colorful';\nimport { Modal } from 'components/Modal/Modal';\nimport { Confirm } from 'components/Confirm/Confirm';\nimport {\n  deleteNote,\n  updateNoteColor,\n  updateNoteName,\n  updateNoteTodos,\n} from 'utils/operations';\n\nfunction NoteItem({ note, idx, isDraggingNote, setIsDraggingNote, dragNotes }) {\n  const [todos, setTodos] = useState(note.todos);\n  const [noteColor, setNoteColor] = useState(note.color);\n  const [editNameOpen, setEditNameOpen] = useState(false);\n  const [editColorOpen, setEditColorOpen] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { dispatch } = useContext(MyContext);\n  const bcgNoteColor = note.color + '55';\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    dispatch({\n      type: 'editNoteTodos',\n      noteId: note._id,\n      newTodos: todos,\n    });\n\n    updateNoteTodos(note._id, todos);\n  }, [dispatch, note._id, todos]);\n\n  const toggleConfirm = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  const handleDeleteNote = note => {\n    deleteNote(note)\n      .then(data => {\n        dispatch({ type: 'deleteNote', noteId: data._id });\n      })\n      .catch(error => console.log(error));\n  };\n\n  const addTodo = data => {\n    if (data.trim() !== '') {\n      const newTodo = {\n        id: nanoid(4),\n        text: data,\n        completed: false,\n      };\n      setTodos([newTodo, ...todos]);\n    }\n  };\n\n  const editTodo = (todoId, newText) => {\n    setTodos(\n      todos.map(todo =>\n        todo.id === todoId ? { ...todo, text: newText } : todo\n      )\n    );\n  };\n\n  const completeTodo = todoId => {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const deleteTodo = todoId => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleNoteNameModal = () => {\n    setEditNameOpen(!editNameOpen);\n  };\n\n  const handleEditName = newName => {\n    toggleNoteNameModal();\n    dispatch({ type: 'editNoteName', noteId: note._id, newName });\n\n    updateNoteName(note._id, newName);\n  };\n\n  const toggleNoteColorModal = () => {\n    setEditColorOpen(!editColorOpen);\n\n    if (editColorOpen) {\n      updateNoteColor(note._id, noteColor);\n    }\n  };\n\n  const handleNoteColor = newColor => {\n    setNoteColor(newColor);\n    dispatch({\n      type: 'editNoteColor',\n      noteId: note._id,\n      newColor: noteColor,\n    });\n  };\n\n  const dragStartHandler = (e, note, idx) => {\n    setIsDraggingNote(note);\n  };\n\n  const dragOverHandler = e => {\n    e.preventDefault();\n  };\n\n  const dropHandler = (e, idx) => {\n    e.preventDefault();\n    dispatch({ type: 'editNoteOrder', idx, isDraggingNote });\n  };\n\n  return (\n    <NoteBoxOuter\n      draggable={dragNotes ? true : false}\n      onDragStart={e => dragStartHandler(e, note, idx)}\n      onDragOver={e => dragOverHandler(e)}\n      onDrop={e => dropHandler(e, idx)}\n    >\n      <NoteBoxInner>\n        {editColorOpen && (\n          <Box position=\"absolute\" top=\"0\" left=\"0\" zIndex=\"200\">\n            <HexColorPicker color={noteColor} onChange={handleNoteColor} />\n          </Box>\n        )}\n\n        <Box\n          bg={note.color}\n          py={2}\n          px={2}\n          textAlign=\"center\"\n          color=\"white\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          position=\"relative\"\n        >\n          <NoteName>{note.name}</NoteName>\n\n          <Box ml=\"auto\" display=\"flex\">\n            <EditBtn\n              type=\"button\"\n              aria-label=\"Edit color\"\n              onClick={toggleNoteColorModal}\n            >\n              <MdFormatColorFill size=\"20\" />\n            </EditBtn>\n            <EditBtn\n              type=\"button\"\n              aria-label=\"Edit note\"\n              onClick={toggleNoteNameModal}\n            >\n              <MdOutlineEdit size=\"20\" />\n            </EditBtn>\n            <DeleteBtn\n              type=\"button\"\n              onClick={() => setShowConfirm(true)}\n              aria-label=\"Delete note\"\n            >\n              <MdDeleteForever size=\"20\" />\n            </DeleteBtn>\n          </Box>\n\n          {editNameOpen && (\n            <NoteEditModal\n              saveNoteName={handleEditName}\n              nameToUpdate={note.name}\n              cancelEdit={toggleNoteNameModal}\n            />\n          )}\n\n          {showConfirm && (\n            <Modal onClose={toggleConfirm}>\n              <Confirm\n                onFormSubmit={() => handleDeleteNote(note)}\n                toggleConfirm={toggleConfirm}\n                name={note.name}\n              />\n            </Modal>\n          )}\n        </Box>\n\n        <TodoAddNew onSubmit={addTodo} bcgNoteColor={bcgNoteColor} />\n\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          deleteTodo={deleteTodo}\n          editTodo={editTodo}\n          completeTodo={completeTodo}\n        ></TodoList>\n      </NoteBoxInner>\n    </NoteBoxOuter>\n  );\n}\n\nexport { NoteItem };\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  cursor: pointer;\n  height: 32px;\n  border: 1px solid grey;\n  border-radius: 16px;\n  background-color: lightgrey;\n  color: grey;\n  font-size: 14px;\n  font-weight: 600;\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n\n  :hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n    color: #212121;\n    background-color: white;\n  }\n`;\n\nexport const Label = styled.label`\n  padding: 0 4px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n  gap: 8px;\n  height: 32px;\n  cursor: pointer;\n  color: ${p => (p.checked ? '#212121' : 'grey')};\n  font-size: 14px;\n  font-weight: 600;\n  border: 1px solid grey;\n  border-radius: 16px;\n  background-color: ${p => (p.checked ? 'white' : 'lightgrey')};\n  transition: box-shadow 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n\n  :hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.6);\n    color: #212121;\n    background-color: white;\n  }\n`;\n\nexport const CheckMove = styled.input`\n  cursor: pointer;\n`;\n","export function getRandomHexColor() {\n  const random = Math.floor(Math.random() * 16777215).toString(16);\n\n  const result = random.length === 5 ? random + '0' : random;\n\n  return `#${result}`;\n}\n","import { Box } from 'components/Box/Box';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport { Button } from './BtnsBlock.styled';\n// import { Label, CheckMove } from './BtnsBlock.styled';\nimport { useContext } from 'react';\nimport { MyContext } from 'utils/context';\nimport { addNote } from 'utils/operations';\nimport { getRandomHexColor } from 'utils/getRandomHexColor';\n\nexport function BtnsBlock({ dragNotes, toggleDragNotes }) {\n  const { dispatch } = useContext(MyContext);\n\n  const newNote = {\n    name: 'New note',\n    todos: [],\n    color: getRandomHexColor(),\n  };\n\n  const handleAdd = () => {\n    addNote(newNote)\n      .then(data => {\n        dispatch({ type: 'addNote', newNote: data });\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <Box display=\"flex\">\n      <Button type=\"button\" onClick={handleAdd}>\n        Add Note <MdAddCircleOutline size=\"24\" />\n      </Button>\n\n      {/* <Label\n        onClick={toggleDragNotes}\n        htmlFor=\"drag\"\n        checked={dragNotes ? true : false}\n      >\n        Drag Notes\n        <CheckMove\n          name=\"drag\"\n          type=\"checkbox\"\n          checked={dragNotes ? true : false}\n          readOnly\n        />\n      </Label> */}\n    </Box>\n  );\n}\n","// import { nanoid } from 'nanoid';\n// import { getRandomHexColor } from 'utils/getRandomHexColor';\n\nexport const reducer = (mynotes, action) => {\n  switch (action.type) {\n    case 'getNotes':\n      if (!action.notes) {\n        return;\n      }\n      return [...action.notes];\n    case 'addNote':\n      const newNote = {\n        ...action.newNote,\n      };\n      return [...mynotes, newNote];\n    case 'editNoteTodos':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, todos: action.newTodos }\n          : noteItem;\n      });\n    case 'deleteNote':\n      return mynotes.filter(note => note._id !== action.noteId);\n    case 'editNoteName':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, name: action.newName }\n          : noteItem;\n      });\n    case 'editNoteColor':\n      return mynotes.map(noteItem => {\n        return noteItem._id === action.noteId\n          ? { ...noteItem, color: action.newColor }\n          : noteItem;\n      });\n    case 'editNoteOrder':\n      const isDraggingNote = action.isDraggingNote;\n      mynotes = mynotes.filter(note => note._id !== isDraggingNote._id);\n      mynotes.splice(action.idx, 0, isDraggingNote);\n      return mynotes;\n    default:\n      return mynotes;\n  }\n};\n","import { Header, LogoText, My, UserName } from 'components/Header/Header';\nimport { MasonryBox } from 'components/Box/Box';\nimport { useState, useEffect, useReducer } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { NoteItem } from 'components/NoteItem/NoteItem';\nimport { BtnsBlock } from 'components/BtnsBlock/BtnsBlock';\nimport { Button } from 'components/BtnsBlock/BtnsBlock.styled';\nimport { reducer } from 'utils/reducer';\nimport { MyContext } from 'utils/context';\nimport { Footer } from 'components/Footer/Footer';\nimport { getNotes, logout } from 'utils/operations';\nimport { Box } from 'components/Box/Box';\n\nexport default function NotesPage({\n  user,\n  isLoggedIn,\n  setIsLoggedIn,\n  setToken,\n}) {\n  const [mynotes, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    getNotes()\n      .then(data => {\n        dispatch({ type: 'getNotes', notes: data });\n      })\n      .catch(error => console.log(error.message));\n  }, []);\n\n  const [isDraggingNote, setIsDraggingNote] = useState(null);\n  const [dragNotes, setDragNotes] = useState(false);\n\n  const breakpointColumnsObj = {\n    default: 7,\n    2163: 6,\n    1855: 5,\n    1547: 4,\n    1239: 3,\n    931: 2,\n    623: 1,\n  };\n\n  const toggleDragNotes = () => {\n    setDragNotes(!dragNotes);\n  };\n\n  const handleLogout = () => {\n    logout()\n      .then(data => {\n        setIsLoggedIn(false);\n        setToken(null);\n      })\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <>\n      {!isLoggedIn && <Navigate to=\"/\" />}\n      <MyContext.Provider value={{ dispatch }}>\n        <Header>\n          <LogoText>\n            <My>My</My>Notes\n          </LogoText>\n\n          <Box display=\"flex\" alignItems=\"center\">\n            {user && <UserName>{user}</UserName>}\n            <Button type=\"button\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Box>\n        </Header>\n\n        <MasonryBox breakpointCols={breakpointColumnsObj}>\n          {mynotes.map((noteItem, idx) => {\n            return (\n              <NoteItem\n                key={noteItem._id}\n                idx={idx}\n                note={noteItem}\n                isDraggingNote={isDraggingNote}\n                setIsDraggingNote={setIsDraggingNote}\n                dragNotes={dragNotes}\n              />\n            );\n          })}\n        </MasonryBox>\n\n        <Footer>\n          <BtnsBlock toggleDragNotes={toggleDragNotes} dragNotes={dragNotes} />\n        </Footer>\n      </MyContext.Provider>\n    </>\n  );\n}\n"],"names":["Box","styled","typography","space","color","layout","border","shadow","flexbox","position","MasonryBox","Masonry","ReorderItemStyled","Reorder","Label","Checkbox","CheckBtn","TodoText","EditBtn","DeleteBtn","EditTodoForm","EditTodoInput","SaveBtn","TodoEditModal","textToUpdate","saveTodo","cancelEdit","useState","newText","setNewText","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","onSubmit","preventDefault","type","name","value","onChange","currentTarget","autoComplete","size","TodoItem","todo","completeTodo","editTodo","deleteTodo","editOpen","setEditOpen","controls","useDragControls","id","text","completed","toggleModal","dragListener","dragControls","onPointerDown","e","start","cursor","checked","readOnly","onClick","ml","pl","display","disabled","className","ReorderListStyled","TodoList","todos","setTodos","axis","values","onReorder","map","AddForm","InputNew","AddBtn","TodoAddNew","bcgNoteColor","setText","bg","placeholder","fadeInAnim","keyframes","fadeIn","NoteBoxOuter","fadeOut","p","draggable","NoteBoxInner","NoteName","EditNoteForm","EditNoteInput","NoteEditModal","nameToUpdate","saveNoteName","newName","setNewName","MyContext","createContext","Overlay","ModalWrap","modalRoot","document","querySelector","Modal","onClose","children","createPortal","target","Form","Text","Button","Confirm","onFormSubmit","toggleConfirm","mt","justifyContent","alignItems","NoteItem","note","idx","isDraggingNote","setIsDraggingNote","dragNotes","noteColor","setNoteColor","editNameOpen","setEditNameOpen","editColorOpen","setEditColorOpen","showConfirm","setShowConfirm","dispatch","useContext","isFirstRender","useRef","current","noteId","_id","newTodos","updateNoteTodos","toggleNoteNameModal","onDragStart","dragStartHandler","onDragOver","dragOverHandler","onDrop","dropHandler","top","left","zIndex","newColor","py","px","textAlign","updateNoteColor","updateNoteName","deleteNote","then","data","catch","error","console","log","handleDeleteNote","trim","newTodo","nanoid","todoId","filter","getRandomHexColor","random","Math","floor","toString","result","length","BtnsBlock","toggleDragNotes","newNote","addNote","reducer","mynotes","action","notes","noteItem","splice","NotesPage","user","isLoggedIn","setIsLoggedIn","setToken","useReducer","getNotes","message","setDragNotes","to","Provider","Header","My","logout","breakpointCols","default","Footer"],"sourceRoot":""}